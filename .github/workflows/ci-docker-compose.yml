# This is a basic workflow to help you get started with Actions

name: CI for docker-compose

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: true  # Ensure submodules are checked out
          fetch-depth: 0

      # Runs a single command using the runners shell

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
  
      # - name: Log in to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  
      # - name: Set up Docker Compose
      #   run: sudo apt-get install docker-compose -y
      - name: List directory contents
        run: |
          ls -la
          ls -la frontend
          ls -la mongodb-backend
          ls -la neo4j-backend
  
      - name: Build services
        run: docker-compose build
  
      - name: Run Docker Compose with timeout
        id: run_with_timeout
        run: |
          timeout 360 docker-compose up --abort-on-container-exit
          echo "::set-output name=exit_code::$?"

      - name: Check for Timeout
        run: |
          if [ "${{ steps.run_with_timeout.outputs.exit_code }}" -eq 124 ]; then
            echo "The docker-compose command timed out."
            exit 1
          else
            echo "The docker-compose command completed successfully."
          fi
